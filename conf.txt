#user nobody
worker_processes 1;
#error_log logs/error.log;
#error_log logs/error.log notice;
#error_log logs/error.log info;
#pid  logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
 include mime.types;
 types {
  # 
  #  Add any additional types here
  #
     text/vtt vtt;
  }

  default_type application/octet-stream;
  underscores_in_headers on;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';
  
  # Increase limit to accomodate large request headers
  large_client_header_buffers   4    20k;
  
  # To increase the client body man size to support the upload feature
  Client_max_body_size   10m;
   
  # tcp and cache configs
  sendfile on;
  tcp_nopush  on;
  tcp_nodelay  on;
  client_header_timeout   2m;
  client_body_timeout   2m;
   
  # Is utilized if client stops reading data, allowing nginx to quickly
  # free up the stale client connection. The default is 60.
  send_timeout   10;
  
  # Allow server to close the connection after a client stops responding.
  # Frees up socket-associated memory. This helps prevent low bandwidth DDoS
  # attacks like rSnake's Slowlaris and also provides a higher survivability
  # profile due to network issues. This essentially allows you to recycle
  # connections and bounce away from failure states quickly.
  reset_timedout_connection  on;
  keepalive_timeout   30;
  open_file_cache max=10240  inactive=20s;
  open_file_cache_valid  2m;
  open_file_cache_min_uses  2;
  open_file_cache_errors  on;
  
  # compress logic
  gzip  on;
  gzip_comp_level  2;
  gzip_min_length  0;
  gzip_http_version  1.0;
  gzip_disable  "MSIE  [1-6]\.(?/*SV1)";
  gzip_types text/css  application/javascript;
  
  #
  # node.js application endpoint
  #
  upstream app_proxy {
      server localhost:8000;
  }

  server {
      listen 443 ssl;
      server_name  {server_name}
      access_log   /var/log/nginx/{filename} main;

      #
      #  SSL Handling
      #
      ssl on;
      ssl_protocols  TLSv1;
      ssl_certificate server.crt;
      ssl_certificate_key  server.key;
      ssl_ciphers RC4:HIGH:!aNULL:!MD5:!kEDH;
      ssl_prefer_server_ciphers  on;
      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout  10m;

      #
      # Redirect the http traffic to https
      #
      error_page 497 https://$host$request_uri;
      location / {
         proxy_set_header X-Real-IP  $remote_addr;
         proxy_set_header pp_remote_addr $remote_addr;
         proxy_set_header X-Forwarded-Forwarded  $proxy_add_x_forwarded_for;
         proxy_set_header Host  $http_host;
         proxy_set_header X-Nginx-Proxy  true;
         proxy_set_header X-Forwarded-Proto   $scheme;
         proxy_read_timeout  200;
         proxy_http_version  1.1;
         proxy_set_header   Connection  "";
         proxy_pass  http://app_proxy/;
         proxy_redirect  off;
     }
  }
} 
